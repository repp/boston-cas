- help_text ||= ''

.c-card.c-card--flush{ data: {requirement_manager: true, base_object_name: form.object_name} }
  .c-card__content
    %h2 Rules
    - if help_text.present?
      %p.margin-bottom-02= help_text

    = render 'requirement_manager/inherited_rules', inheritee: form.object
    - if can_assign_requirements?
      %h4= selected_requirements_heading
      %div{ data: {selected_requirements: true} }
      - form.object.requirements.preload(:rule).order(:created_at).each do |requirement|
        %div{data: {existing_requirement: true, requirement_id: requirement.id, requirement_rule_id: requirement.rule_id, requirement_rule_name: requirement.rule_name_with_verb, requirement_positive: requirement.positive.to_s, requirement_variable: requirement.variable.to_s, requirement_display_for_variable: requirement.display_for_variable }}

      %h4 Add Rule Condition
      .row
        .col-sm-5.col-sm-5.col-md-4.col-lg-3
          .btn-group
            %a{href: '#', class: 'btn btn-rule-condition', data: {new_requirement_positivity_toggle: true, requirement_positive: 'true'}} Must
            %a{href: '#', class: 'btn btn-rule-condition', data: {new_requirement_positivity_toggle: true, requirement_positive: 'false'}} Can't
        .col-sm-7.col-sm-4.col-md-5.col-lg-7
          .form-group
            = select_tag :available_rules, nil, class: 'form-control', data: {rule_searcher: true}
            - form.object.available_rules.each do |rule|
              %div{data: {available_rule: true, rule_id: rule.id, rule_name: rule.name_with_verb, variable: rule.variable_requirement?.to_s}}
              - if rule.variable_requirement?
                .jVariableRequirment{data: {rule_id: rule.id}}
                  = render rule
        .col-sm-12.col-sm-3.col-lg-2.text-right
          .btn-group
            %a{href: '#', class: 'btn btn-primary', data: {add_button: true}} Add Rule

= content_for :page_js do
  :javascript
    $('[data-requirement-manager]').each(function(_i, element) {
      new App.RequirementManager.Controller(element);
    });
